% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/allMethods.R
\name{annotateRanges}
\alias{annotateRanges}
\title{Group ranges based on annotation}
\usage{
annotateRanges(object, annotation_subset = NULL, TxDb,
  tssRegion = c(-3000, 3000), changeGroupToAnnotation = FALSE,
  heatmap_grouping = "group", ...)
}
\arguments{
\item{object}{A profileplyr object}

\item{annotation_subset}{If specific annotations (from ChIPseeker package) are desired, specify them here in a character vector. Can be one or any combination of "Promoter", "Exon", "Intron", "Downstream", "Distal Intergenic", "3p UTR", or "5p UTR". This argument is optional and all annotation types will be included if argument is left out.}

\item{TxDb}{TxDb object, a character sting that is a path to a GTF file, or character string indicating genome if one of the following - "hg19", "hg38", "mm9", "mm10".}

\item{tssRegion}{This needs to be a vector of two numbers that will define promoter regions. The first number must be negative, while the second number must be positive. Default values are  c(-3000, 3000) - SHOULD WE CHANGE THIS, SEEMS BIG!)}

\item{changeGroupToAnnotation}{If the grouping should be changed to the annotations (typically when the ranges will be exported for visualization based on this annotation), this should be TRUE. The default if FALSE, which will keep the grouping that existed before annotating the object. This is typical if the output will be used for finding overlaps with gene lists in the 'groupBy' function.}

\item{heatmap_grouping}{Only relevant if 'keepAnnotationAsGroup' is set to TRUE. This argument needs to be either "group", or "annotation". This will determine how the ranges are grouped in the resulting object. Default is heatmap_grouping = "Group". If there are no groups in the deepTools matrix that was used in the function, this argument is unnecessary}

\item{...}{pass to \code{\link[ChIPseeker]{annotatePeak}}}
}
\value{
A profileplyr object
}
\description{
The ranges from the deepTools matrix will be subset based on whether they overlap with specified annotated regions (using ChIPseeker) throughout the genome
}
\details{
tbd
}
\examples{

example <- system.file("extdata", "example_deepTools_MAT", package = "profileplyr") 
object <- import_deepToolsMat(example) 

annotateRanges(object, TxDb = "mm10")

# only get ranges that overlap a specific type of annotation

annotateRanges(object, TxDb = "mm10", annotation_subset = c("Promoter", "Exon", "Intron"))

}
